{
  "Comment": "A workflow that makes sentiment analysis against customer reviews and saves the results to S3",
  "StartAt": "Get reviews from database and save result set to S3 in .csv format",
  "States": {
    "Get reviews from database and save result set to S3 in .csv format": {
      "Type": "Task",
      "Resource": "arn:aws:states:::lambda:invoke",
      "Parameters": {
        "FunctionName": "${GetFromDbAndSaveToStorageFunctionArn}",
        "Payload": {
          "commandType.$": "$.queryInput.commandType",
          "command.$": "$.queryInput.command",
          "targetS3Bucket.$": "$.queryInput.targetS3Bucket",
          "targetS3Key.$": "$.queryInput.targetS3Key"
        }
      },
      "Next": "Get reviews from S3 and iterate over them",
      "ResultPath": null
    },
    "Get reviews from S3 and iterate over them": {
      "Type": "Map",
      "ItemProcessor": {
        "ProcessorConfig": {
          "Mode": "DISTRIBUTED",
          "ExecutionType": "EXPRESS"
        },
        "StartAt": "Detect dominant language",
        "States": {
          "Detect dominant language": {
            "Type": "Task",
            "Next": "Detect sentiment",
            "Parameters": {
              "Text.$": "$.review"
            },
            "Resource": "arn:aws:states:::aws-sdk:comprehend:detectDominantLanguage",
            "ResultPath": "$.detectDominantLanguageResult"
          },
          "Detect sentiment": {
            "Type": "Task",
            "Next": "Transform output",
            "Parameters": {
              "LanguageCode.$": "$.detectDominantLanguageResult.Languages[0].LanguageCode",
              "Text.$": "$.review"
            },
            "Resource": "arn:aws:states:::aws-sdk:comprehend:detectSentiment",
            "ResultPath": "$.detectSentimentResult"
          },
          "Transform output": {
            "Type": "Pass",
            "End": true,
            "Parameters": {
              "id.$": "$.id",
              "product_id.$": "$.product_id",
              "title.$": "$.title",
              "review.$": "$.review",
              "sentiment.$": "$.detectSentimentResult.Sentiment"
            }
          }
        }
      },
      "ItemReader": {
        "Resource": "arn:aws:states:::s3:getObject",
        "ReaderConfig": {
          "InputType": "CSV",
          "CSVHeaderLocation": "FIRST_ROW"
        },
        "Parameters": {
          "Bucket.$": "$.queryInput.targetS3Bucket",
          "Key.$": "$.queryInput.targetS3Key"
        }
      },
      "Label": "GetreviewsfromS3anditerateoverthem",
      "End": true,
      "ResultWriter": {
        "Resource": "arn:aws:states:::s3:putObject",
        "Parameters": {
          "Bucket.$": "$.etlOutput.targetS3Bucket",
          "Prefix.$": "$.etlOutput.targetS3Key"
        }
      },
      "MaxConcurrency": 1
    }
  }
}